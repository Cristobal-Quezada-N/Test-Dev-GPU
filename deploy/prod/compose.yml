version: "3.9"

networks:
  app-net:
    driver: bridge

# Directorios de datos de los servicios
volumes:
  postgres-data:
    driver: local
    driver_opts:
      type: none
      device: ./data/postgres
      o: bind
  pgadmin-data:
    driver: local
    driver_opts:
      type: none
      device: ./data/pgadmin
      o: bind

services:
  postgres:
    image: postgres:17
    container_name: postgres-prod
    restart: unless-stopped
    env_file:
      - .env.example
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-net
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready "]
      interval: 5s
      timeout: 3s
      retries: 20

  pgadmin:
    image: dpage/pgadmin4:9.3
    container_name: pgadmin-prod
    restart: unless-stopped
    env_file:
      - .env.example
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - app-net
    ports:
      - "5050:80"
    depends_on:
      postgres:
        condition: service_healthy

  backend:
    build: ../../backend
    container_name: backend-prod
    restart: unless-stopped
    env_file:
      - .env.example
    ports:
      - "8090:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-net

  frontend:
    image: node:22
    container_name: frontend-prod
    working_dir: /app
    volumes:
      - ../../frontend/:/app
    env_file:
      - .env.example
    command: sh -c "npm i && npm run dev -- --host --port 3000"
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_started
    networks:
      - app-net
